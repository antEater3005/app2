{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Addtask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","Addtask","useState","settext","setday","setreminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","About","App","showAddTask","setShowAddTask","setTask","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf835f20.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n \r\nconst Button = ({ color, text,onClick}) => {\r\n  return (\r\n    <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick:PropTypes.func\r\n};\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button color={showAdd ? 'red':'green'} text={showAdd ? \"Close\" : \"Add\"} onClick={onAdd} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n};\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n// CSS in JS\r\n//  const headingstyle={\r\n//      color:'red',\r\n//      backgroundColor:'black',\r\n//  }\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder?'reminder':''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst Addtask = ({ onAdd }) => {\r\n  const [text, settext] = useState(\"\");\r\n  const [day, setday] = useState(\"\");\r\n  const [reminder, setreminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n    onAdd({ text, day, reminder });\r\n    settext(\"\");\r\n    setday(\"\");\r\n    setreminder(false);\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => settext(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>date & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setday(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check \">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setreminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Addtask;\r\n","const Footer = () => {\r\n  return <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <a href=\"/about\">About</a>\r\n  </footer>;\r\n};\r\n\r\nexport default Footer;\r\n"," \r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.3</h4>\r\n            <a href=\"/\">Go Back</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Addtask from \"./components/Addtask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTask] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTask(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n  //fetch task singular\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTask([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTask([...tasks, newTask]);\n  };\n  // delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n    setTask(tasks.filter((task) => task.id !== id));\n  };\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n    setTask(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        {showAddTask && <Addtask onAdd={addTask} />}\n        {tasks.length > 0 ? (\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          \"No Task to Show\"\n        )}\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}